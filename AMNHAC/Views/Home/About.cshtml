@{
    ViewBag.Title = "About";
}
<h2>@ViewBag.Title.</h2>
<h3>@ViewBag.Message</h3>
@*
    <p>Use this area to provide additional information.</p>
    <p><input type="file" id="input-file" accept="audio/*" /></p>
    <p><audio id="audio" controls="controls" style="width: 100%"></audio></p>
    <canvas id="canvas" style="width: 100%; height: 200px"></canvas>


    <script>
        window.onload = function () {
            // Lấy file, audio và canvas element
            var fileElm = document.querySelector("#input-file");
            var audioElm = document.querySelector("#audio");
            var canvasElm = document.querySelector("canvas");

            canvasElm.width = window.innerWidth;
            canvasElm.height = window.innerHeight;




            // Thực hiện xử lý khi một file audio được chọn
            fileElm.onchange = function () {
                // Gắn đường source cho audio element với file đầu tiên trong danh sách các file đã chọn
                // File object thường là 1 array do input type file có thể chấp nhận thuộc tính multiple
                // để chúng ta có thể chọn nhiều hơn một file. URL.createObjectURL sẽ giúp chúng ta tạo ra một
                // DOMString chứa URL đại diện cho Object được đưa vào. Bạn có thể xem chi tiết tại: https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL
                audioElm.src = URL.createObjectURL(this.files[0]);

                // Tiếp theo, tải file và thực hiện play file đã được chọn
                audioElm.load();
                audioElm.play();

                // Tiếp, khởi tạo AudioContext
                var audioContext = new AudioContext();
                // Khởi tạo AudioContext source
                var audioContextSrc = audioContext.createMediaElementSource(audio);
                console.log(audioContextSrc);
                // Khởi tạo Analyser
                var audioAnalyser = audioContext.createAnalyser();
                console.log(audioAnalyser);
                // Khởi tạo 2D canvas
                canvasContext = canvasElm.getContext("2d");
                console.log(canvasContext);

                // Kết nối AudioContext source với Analyser
                audioContextSrc.connect(audioAnalyser);
                // Kết nối Analyser với AudioDestinationNode
                audioAnalyser.connect(audioContext.destination);

                // Gán FFT size là 256 cho Analyser
                // Các bạn có thể xem thêm tại: https://developer.mozilla.org/en-US/docs/Web/API/AnalyserNode/fftSize
                audioAnalyser.fftSize = 2048;

                // Lấy dữ liệu tần số từ Analyser
                // https://developer.mozilla.org/en-US/docs/Web/API/AnalyserNode/frequencyBinCount
                var analyserFrequencyLength = audioAnalyser.frequencyBinCount;

                // Khởi tạo một mảng số nguyên dương 8-bit có số lượng phần tử bằng analyserFrequencyLength
                var frequencyDataArray = new Uint8Array(analyserFrequencyLength);

                // Lấy width và height của canvas
                var canvasWith = canvasElm.width;
                var canvasHeight = canvasElm.height;

                // Tính toán barWidth và barHeight
                var barWidth = (canvasWith / analyserFrequencyLength) * 2.5;
                var barHeight;
                var barIndex = 0;

                console.log(frequencyDataArray)

                function renderFrame() {
                    // Thông báo với trình duyệt rằng chúng ta đang chuẩn bị thực hiện một animation với method là như này. Hãy chuẩn bị đi 😊
                    // https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame
                    window.requestAnimationFrame(renderFrame);

                    // Reset lại barIndex trở về 0
                    barIndex = 0;

                    // Điền dữ liệu tần số vào mảng
                    audioAnalyser.getByteFrequencyData(frequencyDataArray);
                    console.log(audioAnalyser)

                    // Vẽ một hình chữ nhật với nền màu đen
                    canvasContext.fillStyle = "#000";
                    canvasContext.fillRect(0, 0, canvasWith, canvasHeight);


                    // Chạy lần lượt từ 0 đến hết dữ liệu tần số của Analyser
                    for (var i = 0; i < analyserFrequencyLength; i++) {
                        barHeight = frequencyDataArray[i];
                        // Tạo màu cho thanh bar
                        var rgbRed = barHeight + (25 * (i / analyserFrequencyLength));
                        var rgbGreen = 250 * (i / analyserFrequencyLength);
                        var rgbBlue = 50;

                        // Điền màu và vẽ bar
                        canvasContext.fillStyle = "rgb(" + rgbRed + ", " + rgbGreen + ", " + rgbBlue + ")";
                        canvasContext.fillRect(barIndex, (canvasHeight - barHeight), barWidth, barHeight);

                        barIndex += (barWidth + 1);
                    }
                }
                // Gọi method để render vào canvas
                renderFrame();
            }
        }
    </script>*@




@*    <link rel="stylesheet" type="text/css" href="/static/virtualpiano/style/main.css" />
    <link rel="stylesheet" type="text/css" href="/static/virtualpiano/style/pace.css" />*@
    <script setTimeout(function () {src="~/Content/js/js1.js"}, 1000) ></script>
    <script setTimeout(function () { src="~/Content/js/js2.js}, 1000) "></script>
    <script setTimeout(function () {src="~/Content/js/js3.js"}, 1000) ></script>
    <script setTimeout(function () {src="~/Content/js/js4.js"}, 1000) ></script>
    <script setTimeout(function () {src="~/Content/js/jsNode.js"}, 1000) ></script>
    <script setTimeout(function () {src="~/Content/js/js6.js"}, 1000) ></script>
    <script setTimeout(function () {src="~/Content/js/js7.js"}, 1000) ></script>
    <script setTimeout(function () {src="~/Content/js/js8.js"}, 1000) ></script>
    <script setTimeout(function () {src="~/Content/js/js9.js"}, 1000) ></script>
    <script setTimeout(function () {async src="~/Content/js/js10.js"}, 1000)   ></script>
    <script setTimeout(function () {async src="~/Content/js/js11.js"}, 1000)  ></script>
    <script setTimeout(function () {async src="~/Content/js/js12.js"}, 1000)  ></script>
    <script setTimeout(function () {async src="~/Content/js/js13.js"}, 1000)></script>
    <script setTimeout(function () {async src="~/Content/js/js14.js"}, 1000) ></script>

    <div id="piano">
        <div id="btns">
            <div id="styled" class="text" onclick="piano.styler()">Ảnh nền</div>
            <div id="assistd" class="text" onclick="piano.assist()">Tên phím: ẩn</div>
            <div id="recordd" class="text" onclick="win_fnc.viewer('recorder')">Thu âm</div>
            <div id="sheetd" class="text" onclick="win_fnc.viewer('sheet')">Bản nhạc</div>
        </div>
        <div id="white"></div>
        <div id="black"></div>
        <div id="audio" onerror="location.reload()"></div>
    </div>
    <div id='win'></div>

<style>


body {
    -moz-user-select: -moz-none;
    -moz-user-select: none;
    -ms-user-select: none;
    -webkit-user-select: none;
    user-select: none;
    margin: 35px 0 0 0;
    background: url(../style/img/bk/5.jpg);
    cursor: default;
}

#logo {
    position:absolute;
    bottom: 10px; left: 10px;
    width: 50px;
    height: 50px;
}

#piano {
    z-index: 3;
    margin: 0 auto;
    width: 1236px;
    height: 220px;
}

#s1,
#s2,
#composition {
    -moz-user-select: text;
    -ms-user-select: text;
    -webkit-user-select: text;
    user-select: text;
    cursor: text;
}

#composition {
    width: 300px;
}

#submit {
    position: absolute;
    left: 511px;
}

.w,
.b,
.text,
#tb1,
#tb2,
#expert,
input[type="button"] {
    cursor: pointer;
}

.text,
#white,
#win,
#btns {
    -moz-border-radius: 5px;
    -webkit-border-radius: 5px;
    border-radius: 5px;
}

.sheet_txt,
#rec_txt,
#sheet_choose {
    -moz-border-radius: 2px;
    -webkit-border-radius: 2px;
    border-radius: 2px;
}

#btns {
    position: absolute;
    z-index: 4;
    margin: 0 auto;
    margin-top: 3px;
    margin-left: 393px;
    padding-left: 10px;
    width: 450px;
    height: 40px;
    border: 1px solid #303030;
    background-color: #404040;
    font-size: 20px;
    font-family: Piano;
}

.text {
    float: left;
    text-align: center;
}

#recordd,
#styled,
#sheetd {
    width: 100px;
    padding-top: 10px;
}

#assistd {
    width: 140px;
    padding-top: 10px;
}

#white {
    z-index: 1;
    padding-left: 10px;
    width: 1236px;
    height: 220px;
    background-image: linear-gradient(#454545 -10px,#000 200px);
}

#black {
    position: relative;
    top: -210px;
    padding-left: 9px;
    width: 1236px;
}

.w,
.b {
    float: left;
    text-align: center;
}

.w {
    margin: 4% auto;
    margin-left: 2px;
    width: 32px;
    height: 160px;
    -moz-border-radius: 2px 2px 5px 5px;
    -webkit-border-radius: 2px 2px 5px 5px;
    border-radius: 2px 2px 5px 5px;
    background-image: linear-gradient(0,#000 -20px,#fff 8%);
    color: #000;
    font-weight: 700;
}

.b {
    position: relative;
    width: 20px;
    height: 100px;
    -moz-border-radius: 0 0 5px 5px;
    -webkit-border-radius: 0 0 5px 5px;
    border-radius: 0 0 5px 5px;
    background-image: linear-gradient(0,#c8c8c8 -10px,#0f0f0f 12%);
    color: #fff;
}

#win {
    visibility:hidden;
    position: relative;
    top: 5px;
    z-index: 5;
    margin: 0 auto;
    padding-left: 15px;
    width: 585px;
    height: 400px;
    border: 1px solid #202020;
    background-image: linear-gradient(#C7C7C7 -10px,#fff 200px);
}

#rec_bkg {
    margin-top: -2px;
    margin-left: -16px;
    width: 600px;
    height: 22px;
    border: 1px solid #202020;
    -moz-border-radius: 5px 5px 0 0;
    -webkit-border-radius: 5px 5px 0 0;
    border-radius: 5px 5px 0 0;
    background-image: linear-gradient(#454545 -10px,#000 200px);
}

#sheet_stop,
#sheet_stop_sep,
#hh_vis,
#hh_sep {
    visibility: hidden;
}

.sep {
    color: #B2CCCC;
}

#sheet_play {
    margin-left: 5px;
}

#rec_bkg_title {
    position: absolute;
    top: 3px;
    left: 5px;
    color: #DEDEDE;
    text-align: center;
    font-size: 20px;
    font-family: Piano;
}

#rec_bkg_x,
#rec_bkg_- {
    position: absolute;
    top: 0;
    width: 22px;
    height: 22px;
    color: #BEBEBE;
    text-align: center;
}

#rec_bkg_x {
    left: 578px;
    font-weight: 600;
}

#rec_bkg_- {
    left: 555px;
    font-size: 20px;
}

    .text,
    #rec_bkg_x:hover,
    #rec_bkg_-:hover {
        color: #DEDEDE;
    }

#recplay {
    position: absolute;
    top: 32px;
    left: 215px;
    float: left;
}

#sheet_tb1,
#rec_tb2,
#rec_tb3 {
    position: absolute;
    left: 10px;
    float: left;
    width: 606px;
    height: 22px;
}

#rec_tb1,
#sheet_tb1 {
    top: 32px;
}

#rec_tb2 {
    top: 62px;
    left: 10px;
    width: 550px;
}

#rec_tb3 {
    top: 367px;
}

.rec_txt {
    position: absolute;
    top: 92px;
    left: 10px;
    width: 570px;
    height: 270px;
}

.sheet_txt {
    top: 62px;
    height: 325px;
}

#sheet_submit {
    position: absolute;
    top: 365px;
    left: 517px;
}

#expbar {
    float: right;
    margin-right: -18px;
}

#exptext {
    z-index: 5;
    cursor: pointer;
}

</style>
