@model IEnumerable<AMNHAC.Models.link>


<script src="~/Scripts/simpleTones.js"></script>



<p><input type="file" id="input-file" accept="audio/*" /></p>
<p><audio id="audio" src="~/Content/music/Ayueyue.mp3" controls="controls" style="width: 100%"></audio></p>
<canvas id="canvas" style="width: 100%; height: 200px"></canvas>


<script>
    window.onload = function () {
        // Lấy file, audio và canvas element
        var play = document.getElementById("play");
        var fileElm = document.querySelector("#input-file");
        var audioElm = document.querySelector("#audio");
        var canvasElm = document.querySelector("canvas");

        canvasElm.width = window.innerWidth;
        canvasElm.height = window.innerHeight;




        // Thực hiện xử lý khi một file audio được chọn
        fileElm.onchange = function () {
            // Gắn đường source cho audio element với file đầu tiên trong danh sách các file đã chọn
            // File object thường là 1 array do input type file có thể chấp nhận thuộc tính multiple
            // để chúng ta có thể chọn nhiều hơn một file. URL.createObjectURL sẽ giúp chúng ta tạo ra một
            // DOMString chứa URL đại diện cho Object được đưa vào. Bạn có thể xem chi tiết tại: https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL
            audioElm.src = URL.createObjectURL(this.files[0]);

            // Tiếp theo, tải file và thực hiện play file đã được chọn
            audioElm.load();
            audioElm.play();

            // Tiếp, khởi tạo AudioContext
            var audioContext = new AudioContext();
            // Khởi tạo AudioContext source
            var audioContextSrc = audioContext.createMediaElementSource(audio);
            console.log(audioContextSrc);
            // Khởi tạo Analyser
            var audioAnalyser = audioContext.createAnalyser();
            console.log(audioAnalyser);
            // Khởi tạo 2D canvas
            canvasContext = canvasElm.getContext("2d");
            console.log(canvasContext);

            // Kết nối AudioContext source với Analyser
            audioContextSrc.connect(audioAnalyser);
            // Kết nối Analyser với AudioDestinationNode
            audioAnalyser.connect(audioContext.destination);

            // Gán FFT size là 256 cho Analyser
            // Các bạn có thể xem thêm tại: https://developer.mozilla.org/en-US/docs/Web/API/AnalyserNode/fftSize
            audioAnalyser.fftSize = 32;

            // Lấy dữ liệu tần số từ Analyser
            // https://developer.mozilla.org/en-US/docs/Web/API/AnalyserNode/frequencyBinCount
            var analyserFrequencyLength = audioAnalyser.frequencyBinCount;
            console.log(analyserFrequencyLength);
            // Khởi tạo một mảng số nguyên dương 8-bit có số lượng phần tử bằng analyserFrequencyLength
            var frequencyDataArray = new Uint8Array(analyserFrequencyLength);

            // Lấy width và height của canvas
            var canvasWith = canvasElm.width;
            var canvasHeight = canvasElm.height;

            // Tính toán barWidth và barHeight
            var barWidth = (canvasWith / analyserFrequencyLength) * 2.5;
            var barHeight;
            var barIndex = 0;

            function renderFrame() {
                // Thông báo với trình duyệt rằng chúng ta đang chuẩn bị thực hiện một animation với method là như này. Hãy chuẩn bị đi =)
                // https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame
                window.requestAnimationFrame(renderFrame);

                // Reset lại barIndex trở về 0
                barIndex = 0;

                // Điền dữ liệu tần số vào mảng
                audioAnalyser.getByteFrequencyData(frequencyDataArray);

                // Vẽ một hình chữ nhật với nền màu đen
                canvasContext.fillStyle = "#000";
                canvasContext.fillRect(0, 0, canvasWith, canvasHeight);

                // Chạy lần lượt từ 0 đến hết dữ liệu tần số của Analyser
                for (var i = 0; i < analyserFrequencyLength; i++) {
                    barHeight = frequencyDataArray[i];
                    // Tạo màu cho thanh bar
                    var rgbRed = barHeight + (25 * (i / analyserFrequencyLength));
                    var rgbGreen = 250 * (i / analyserFrequencyLength);
                    var rgbBlue = 50;

                    // Điền màu và vẽ bar
                    canvasContext.fillStyle = "rgb(" + rgbRed + ", " + rgbGreen + ", " + rgbBlue + ")";
                    canvasContext.fillRect(barIndex, (canvasHeight - barHeight), barWidth, barHeight);

                    barIndex += (barWidth + 1);
                }
            }
            // Gọi method để render vào canvas
            renderFrame();
        }
    }
</script>




<div style="color:black;">
    <h3>Example of sounds</h3>
    <div class="row">
        <button onClick='playSound("bump")'> Bump </button>
        <button onClick='playSound("buzzer")'> Buzzer </button>
        <button onClick='playSound("powerdown")'> Power Down </button>
        <button onClick='playSound("powerup")'> Power Up </button>
        <button onClick='playSound("bounce")'> Bounce </button>
        <button onClick='playSound("siren")'> Siren </button>
        <button onClick='playSound("zip")'> Zip </button>
        <button onClick='playSound("falling")'> Fall </button>
    </div>
    <h3>Example of tones</h3>
    <div class="row">
        <button onClick='playTone(tone["C3"])'> C3 </button>
        <button onClick='playTone(tone["C#3"])'> C#3 </button>
        <button onClick='playTone(tone["D3"])'> D3 </button>
        <button onClick='playTone(tone["D#3"])'> D#3 </button>
        <button onClick='playTone(tone["E3"])'> E3 </button>
        <button onClick='playTone(tone["F3"])'> F3 </button>
        <button onClick='playTone(tone["F#3"])'> F#3 </button>
        <button onClick='playTone(tone["Gb3"])'> Gb3 </button>
        <button onClick='playTone(tone["G3"])'> G3 </button>
        <button onClick='playTone(tone["G#3"])'> G#3 </button>
        <button onClick='playTone(tone["A3"])'> A3 </button>
        <button onClick='playTone(tone["A#3"])'> A#3 </button>
        <button onClick='playTone(tone["B3"])'> B3 </button>

        <button onClick='playTone(tone["C4"])'> C4 </button>
        <button onClick='playTone(tone["C#4"])'> C#4 </button>
        <button onClick='playTone(tone["D4"])'> D4 </button>
        <button onClick='playTone(tone["D#4"])'> D#4 </button>
        <button onClick='playTone(tone["E4"])'> E4 </button>
        <button onClick='playTone(tone["F4"])'> F4 </button>
        <button onClick='playTone(tone["F#4"])'> F#4 </button>
        <button onClick='playTone(tone["Gb4"])'> Gb4 </button>
        <button onClick='playTone(tone["G4"])'> G4 </button>
        <button onClick='playTone(tone["G#4"])'> G#4 </button>
        <button onClick='playTone(tone["A4"])'> A4 </button>
        <button onClick='playTone(tone["A#4"])'> A#4 </button>
        <button onClick='playTone(tone["B4"])'> B4 </button>

        <button onClick='playTone(tone["C5"])'> C5 </button>
        <button onClick='playTone(tone["C#5"])'> C#5 </button>
        <button onClick='playTone(tone["D5"])'> D5 </button>
        <button onClick='playTone(tone["D#5"])'> D#5 </button>
        <button onClick='playTone(tone["E5"])'> E5 </button>
        <button onClick='playTone(tone["F5"])'> F5 </button>
        <button onClick='playTone(tone["F#5"])'> F#5 </button>
        <button onClick='playTone(tone["Gb5"])'> Gb5 </button>
        <button onClick='playTone(tone["G5"])'> G5 </button>
        <button onClick='playTone(tone["G#5"])'> G#5 </button>
        <button onClick='playTone(tone["A5"])'> A5 </button>
        <button onClick='playTone(tone["A#5"])'> A#5 </button>
        <button onClick='playTone(tone["B5"])'> B5 </button>



    </div>
    <h3>Example of sharp and flat tones</h3>
    <div class="row">
        <button onClick='playTone(tone["C#8"])'> C#8 </button>
        <button onClick='playTone(tone["D#2"])'> D#2 </button>
        <button onClick='playTone(tone["Eb3"])'> Eb3 </button>
        <button onClick='playTone(tone["F#4"])'> F#4 </button>
        <button onClick='playTone(tone["G#5"])'> G#5 </button>
        <button onClick='playTone(tone["A#6"])'> A#6 </button>
        <button onClick='playTone(tone["Bb7"])'> Bb7 </button>
    </div>
    <h3>All major chords</h3>
    <div class="row">
        <button onClick='playTone(chord["C"])'> C </button>
        <button onClick='playTone(chord["D"])'> D </button>
        <button onClick='playTone(chord["E"])'> E </button>
        <button onClick='playTone(chord["F"])'> F </button>
        <button onClick='playTone(chord["G"])'> G </button>
        <button onClick='playTone(chord["A"])'> A </button>
        <button onClick='playTone(chord["B"])'> B </button>
    </div>
    <h3>All sharp chords</h3>
    <div class="row">
        <button onClick='playTone(chord["C#"])'> C# </button>
        <button onClick='playTone(chord["D#"])'> D# </button>
        <button onClick='playTone(chord["F#"])'> F# </button>
        <button onClick='playTone(chord["G#"])'> G# </button>
        <button onClick='playTone(chord["A#"])'> A# </button>
    </div>
    <h3>All minor chords</h3>
    <div class="row">
        <button onClick='playTone(chord["Cm"])'> Cm </button>
        <button onClick='playTone(chord["Dm"])'> Dm </button>
        <button onClick='playTone(chord["Em"])'> Em </button>
        <button onClick='playTone(chord["Fm"])'> Fm </button>
        <button onClick='playTone(chord["Gm"])'> Gm </button>
        <button onClick='playTone(chord["Am"])'> Am </button>
        <button onClick='playTone(chord["Bm"])'> Bm </button>
    </div>
    <h3>Example of style changes</h3>
    <div class="row">
        <button onClick='playTone(chord["F2"], "sine")'> "sine" </button>
        <button onClick='playTone(chord["F2"], "square")'> "square" </button>
        <button onClick='playTone(chord["F2"], "triangle")'> "triangle" </button>
        <button onClick='playTone(chord["F2"], "sawtooth")'> "sawtooth" </button>
    </div>
    <h3>Example of duration changes</h3>
    <div class="row">
        <button onClick='playTone(chord["C"],"sine",1)'> 1 </button>
        <button onClick='playTone(chord["C"],"sine",2)'> 2 </button>
        <button onClick='playTone(chord["C"],"sine",3)'> 3 </button>
        <button onClick='playTone(chord["C"],"sine",4)'> 4 </button>
        <button onClick='playTone(chord["C"],"sine",5)'> 5 </button>
    </div>


</div>
